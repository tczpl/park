{"vulnerabilities": {"callstack": [], "reentrancy": [], "assertion_failure": [], "time_dependency": ["temp/tmp6000:422:10: Warning: Timestamp Dependency.\n         require(now > Channels[_lcID].LCopenTimeout)"], "integer_overflow": ["temp/tmp6000:459:15: Warning: Integer Overflow.\n         emit DidLCJoin(_lcID, _balances[0], _balances[1])\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:415:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit\nInteger Overflow occurs if:\n    _partyI = 1461501637330902918203684832716283019655932542975\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:649:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances[1]\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[1]+=_balances[1]\nInteger Overflow occurs if:\n    Channels[_lcID].initialDeposit[1] = 89660649888868366171417216235708288031085258661234677303951427843448891257349\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:453:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[0]+=_balances[0]\nInteger Overflow occurs if:\n    Channels[_lcID].initialDeposit[0] = 89660649888868366171417216235708288031085258661234677303951427843448891257349\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:648:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:411:10: Warning: Integer Overflow.\n         Channels[_lcID].confirmTime\nInteger Overflow occurs if:\n    _partyI = 1461501637330902918203684832716283019655932542975\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:651:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:647:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].sequence\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:650:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:645:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].partyA\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:650:52: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances[0] = _balances[2]\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:453:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:436:10: Warning: Integer Overflow.\n         delete Channels[_lcID]\nInteger Overflow occurs if:\n    Channels[_lcID].LCopenTimeout = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:652:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].bond\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:456:10: Warning: Integer Overflow.\n         Channels[_lcID].isOpen\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:531:10: Warning: Integer Overflow.\n         Channels[_lcID].isOpen\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 31\n    Channels[_lcID].partyAddresses[0] = 31\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].isOpen = 255", "temp/tmp6000:417:15: Warning: Integer Overflow.\n         emit DidLCOpen(_lcID, msg.sender, _partyI, _balances[0], _token, _balances[1], Channels[_lcID].LCopenTimeout)\nInteger Overflow occurs if:\n    _partyI = 1461501637330902918203684832716283019655932542975\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:433:68: Warning: Integer Overflow.\n         emit DidLCClose(_lcID, 0, Channels[_lcID].ethBalances[0], Channels[_lcID].erc20Balances\nInteger Overflow occurs if:\n    Channels[_lcID].LCopenTimeout = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:457:10: Warning: Integer Overflow.\n         numChannels++\nInteger Overflow occurs if:\n    numChannels = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:851:10: Warning: Integer Overflow.\n         Channel memory channel = Channels[id]", "temp/tmp6000:414:42: Warning: Integer Overflow.\n         Channels[_lcID].LCopenTimeout = now + _confirmTime\nInteger Overflow occurs if:\n    _confirmTime = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    _partyI = 1461501637330902918203684832716283019655932542975\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:649:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:377:6: Warning: Integer Overflow.\n     mapping(bytes32 => VirtualChannel) public virtualChannels", "temp/tmp6000:410:10: Warning: Integer Overflow.\n         Channels[_lcID].sequence\nInteger Overflow occurs if:\n    _partyI = 1461501637330902918203684832716283019655932542975\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:407:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances\nInteger Overflow occurs if:\n    _partyI = 1461501637330902918203684832716283019655932542975\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:646:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].partyB\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:450:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:264:2: Warning: Integer Overflow.\n contract LedgerChannel {\n ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    Channels[_lcID].LCopenTimeout = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:651:52: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances[1] = _balances[3]\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:433:36: Warning: Integer Overflow.\n         emit DidLCClose(_lcID, 0, Channels[_lcID].ethBalances\nInteger Overflow occurs if:\n    Channels[_lcID].LCopenTimeout = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:651:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances[1]\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:450:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[1]\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:649:50: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances[1] = _balances[1]\nInteger Overflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 31\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    Channels[_lcID].VCrootHash = 0\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[1]\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:414:10: Warning: Integer Overflow.\n         Channels[_lcID].LCopenTimeout\nInteger Overflow occurs if:\n    _partyI = 1461501637330902918203684832716283019655932542975\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:417:89: Warning: Integer Overflow.\n         emit DidLCOpen(_lcID, msg.sender, _partyI, _balances[0], _token, _balances[1], Channels[_lcID].LCopenTimeout\nInteger Overflow occurs if:\n    _partyI = 1461501637330902918203684832716283019655932542975\n    Channels[_lcID].partyAddresses[0] = 0"], "parity_multisig_bug_2": [], "integer_underflow": ["temp/tmp6000:529:55: Warning: Integer Underflow.\n         require(Channels[_lcID].partyAddresses[1] == ECTools.recoverSigner(_state, _sigI)\nInteger Underflow occurs if:\n    Channels[_lcID].partyAddresses[0] = 31\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].isOpen = 255", "temp/tmp6000:2:24: Warning: Integer Underflow.\n * @source: https://github.com/trailofbits/n\nInteger Underflow occurs if:\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].isOpen = 255", "temp/tmp6000:417:15: Warning: Integer Underflow.\n         emit DidLCOpen(_lcID, msg.sender, _partyI, _balances[0], _token, _balances[1], Channels[_lcID].LCopenTimeout)\nInteger Underflow occurs if:\n    _partyI = 1461501637330902918203684832716283019655932542975\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:512:27: Warning: Integer Underflow.\n         bytes32 _state = keccak256(\n         ^\nSpanning multiple lines.\nInteger Underflow occurs if:\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].isOpen = 255", "temp/tmp6000:445:14: Warning: Integer Underflow.\n             require(msg.value == _balances[0], \"state balance does not match sent value\")\nInteger Underflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:829:27: Warning: Integer Underflow.\n                 cursor = keccak256(abi.encodePacked(proofElem, cursor))\nInteger Underflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 2\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:459:15: Warning: Integer Underflow.\n         emit DidLCJoin(_lcID, _balances[0], _balances[1])\nInteger Underflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:640:29: Warning: Integer Underflow.\n         require(_partyA == ECTools.recoverSigner(_initState, sigA)\nInteger Underflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:528:55: Warning: Integer Underflow.\n         require(Channels[_lcID].partyAddresses[0] == ECTools.recoverSigner(_state, _sigA)\nInteger Underflow occurs if:\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].isOpen = 255", "temp/tmp6000:401:14: Warning: Integer Underflow.\n             require(msg.value == _balances[0], \"Eth balance does not match sent value\")\nInteger Underflow occurs if:\n    _partyI = 1461501637330902918203684832716283019655932542975\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:406:14: Warning: Integer Underflow.\n             require(Channels[_lcID].token.transferFrom(msg.sender, this, _balances[1]),\"CreateChannel: token transfer failure\")\nInteger Underflow occurs if:\n    _partyI = 1461501637330902918203684832716283019655932542975\n    Channels[_lcID].partyAddresses[0] = 0", "temp/tmp6000:7:57: Warning: Integer Underflow.\n // https://etherscan.io/address/0xf91546835f756da0c10cfa0cda95b15577b84aa7#code\n ^\nSpanning multiple lines.\nInteger Underflow occurs if:\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].isOpen = 255", "temp/tmp6000:449:14: Warning: Integer Underflow.\n             require(Channels[_lcID].token.transferFrom(msg.sender, this, _balances[1]),\"joinChannel: token transfer failure\")\nInteger Underflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp6000:635:31: Warning: Integer Underflow.\n         bytes32 _initState = keccak256(\n         ^\nSpanning multiple lines.\nInteger Underflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    virtualChannels[_vcID].updateVCtimeout = 0", "temp/tmp6000:827:27: Warning: Integer Underflow.\n                 cursor = keccak256(abi.encodePacked(cursor, proofElem))\nInteger Underflow occurs if:\n    Channels[_lcID].updateLCtimeout = 0\n    _partyA = 29\n    virtualChannels[_vcID].isClose = 0\n    Channels[_lcID].isOpen = 255\n    virtualChannels[_vcID].updateVCtimeout = 0"], "money_concurrency": [["temp/tmp6000:426:14: Warning: Transaction-Ordering Dependency.\n             Channels[_lcID].partyAddresses[0].transfer(Channels[_lcID].ethBalances[0])"], ["temp/tmp6000:534:14: Warning: Transaction-Ordering Dependency.\n             Channels[_lcID].partyAddresses[0].transfer(_balances[0])"]]}, "file_path": "dataset/reentrancy/spank_chain_payment.sol", "evm_code_coverage": 0.42441222344174223, "time": 601.7666029930115}