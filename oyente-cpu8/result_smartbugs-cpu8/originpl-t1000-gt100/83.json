{"vulnerabilities": {"callstack": [], "reentrancy": [], "assertion_failure": [], "time_dependency": ["temp/tmp22246:422:10: Warning: Timestamp Dependency.\n         require(now > Channels[_lcID].LCopenTimeout)"], "integer_overflow": ["temp/tmp22246:433:68: Warning: Integer Overflow.\n         emit DidLCClose(_lcID, 0, Channels[_lcID].ethBalances[0], Channels[_lcID].erc20Balances\nInteger Overflow occurs if:\n    Channels[_lcID].LCopenTimeout = 0\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[0] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].initialDeposit[0] = 0", "temp/tmp22246:457:10: Warning: Integer Overflow.\n         numChannels++\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    numChannels = 115792089237316195423570985008687907853269984665640564039457584007913129639935\n    Channels[_lcID].isOpen = 0", "temp/tmp22246:453:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp22246:436:10: Warning: Integer Overflow.\n         delete Channels[_lcID]\nInteger Overflow occurs if:\n    Channels[_lcID].LCopenTimeout = 0\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[0] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].initialDeposit[0] = 0", "temp/tmp22246:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[1]+=_balances[1]\nInteger Overflow occurs if:\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].initialDeposit[1] = 57896490864990647633680502518240981224722587512560218065236036829239591305217\n    Channels[_lcID].partyAddresses[1] = 0", "temp/tmp22246:433:36: Warning: Integer Overflow.\n         emit DidLCClose(_lcID, 0, Channels[_lcID].ethBalances\nInteger Overflow occurs if:\n    Channels[_lcID].LCopenTimeout = 0\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[0] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].initialDeposit[0] = 0", "temp/tmp22246:453:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[0]+=_balances[0]\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].initialDeposit[0] = 58510522897265563018525845724592500907749701103073402313855714608057628393472", "temp/tmp22246:264:2: Warning: Integer Overflow.\n contract LedgerChannel {\n ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    Channels[_lcID].LCopenTimeout = 0\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[0] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].initialDeposit[0] = 0", "temp/tmp22246:450:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[1]\nInteger Overflow occurs if:\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[1] = 0", "temp/tmp22246:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[1]\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp22246:456:10: Warning: Integer Overflow.\n         Channels[_lcID].isOpen\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp22246:377:6: Warning: Integer Overflow.\n     mapping(bytes32 => VirtualChannel) public virtualChannels", "temp/tmp22246:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp22246:531:10: Warning: Integer Overflow.\n         Channels[_lcID].isOpen\nInteger Overflow occurs if:\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].partyAddresses[0] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].isOpen = 1", "temp/tmp22246:459:15: Warning: Integer Overflow.\n         emit DidLCJoin(_lcID, _balances[0], _balances[1])\nInteger Overflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp22246:450:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances\nInteger Overflow occurs if:\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[1] = 0"], "parity_multisig_bug_2": [], "integer_underflow": ["temp/tmp22246:529:55: Warning: Integer Underflow.\n         require(Channels[_lcID].partyAddresses[1] == ECTools.recoverSigner(_state, _sigI)\nInteger Underflow occurs if:\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].partyAddresses[0] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].isOpen = 1", "temp/tmp22246:2:24: Warning: Integer Underflow.\n * @source: https://github.com/trailofbits/n\nInteger Underflow occurs if:\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].isOpen = 16", "temp/tmp22246:512:27: Warning: Integer Underflow.\n         bytes32 _state = keccak256(\n         ^\nSpanning multiple lines.\nInteger Underflow occurs if:\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].isOpen = 1", "temp/tmp22246:445:14: Warning: Integer Underflow.\n             require(msg.value == _balances[0], \"state balance does not match sent value\")\nInteger Underflow occurs if:\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[1] = 0", "temp/tmp22246:459:15: Warning: Integer Underflow.\n         emit DidLCJoin(_lcID, _balances[0], _balances[1])\nInteger Underflow occurs if:\n    Channels[_lcID].partyAddresses[1] = 0\n    Channels[_lcID].isOpen = 0", "temp/tmp22246:528:55: Warning: Integer Underflow.\n         require(Channels[_lcID].partyAddresses[0] == ECTools.recoverSigner(_state, _sigA)\nInteger Underflow occurs if:\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].isOpen = 2", "temp/tmp22246:7:57: Warning: Integer Underflow.\n // https://etherscan.io/address/0xf91546835f756da0c10cfa0cda95b15577b84aa7#code\n ^\nSpanning multiple lines.\nInteger Underflow occurs if:\n    Channels[_lcID].ethBalances[2] = 0\n    Channels[_lcID].ethBalances[3] = 0\n    Channels[_lcID].erc20Balances[3] = 0\n    Channels[_lcID].initialDeposit[0] = 0\n    Channels[_lcID].erc20Balances[2] = 0\n    Channels[_lcID].initialDeposit[1] = 0\n    Channels[_lcID].isOpen = 1", "temp/tmp22246:449:14: Warning: Integer Underflow.\n             require(Channels[_lcID].token.transferFrom(msg.sender, this, _balances[1]),\"joinChannel: token transfer failure\")\nInteger Underflow occurs if:\n    Channels[_lcID].isOpen = 0\n    Channels[_lcID].partyAddresses[1] = 0"], "money_concurrency": [["temp/tmp22246:426:14: Warning: Transaction-Ordering Dependency.\n             Channels[_lcID].partyAddresses[0].transfer(Channels[_lcID].ethBalances[0])"], ["temp/tmp22246:534:14: Warning: Transaction-Ordering Dependency.\n             Channels[_lcID].partyAddresses[0].transfer(_balances[0])"]]}, "file_path": "dataset/reentrancy/spank_chain_payment.sol", "evm_code_coverage": 0.2042631852579285, "time": 101.2284619808197}