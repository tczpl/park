{"vulnerabilities": {"callstack": [], "reentrancy": [], "assertion_failure": [], "time_dependency": ["temp/tmp7845:763:10: Warning: Timestamp Dependency.\n         require(channel.updateLCtimeout < now, \"LC timeout over.\")", "temp/tmp7845:422:10: Warning: Timestamp Dependency.\n         require(now > Channels[_lcID].LCopenTimeout)"], "integer_overflow": ["temp/tmp7845:459:15: Warning: Integer Overflow.\n         emit DidLCJoin(_lcID, _balances[0], _balances[1])", "temp/tmp7845:744:48: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[0] += virtualChannels[_vcID].ethBalances", "temp/tmp7845:748:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances", "temp/tmp7845:747:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances", "temp/tmp7845:651:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances", "temp/tmp7845:647:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].sequence", "temp/tmp7845:743:21: Warning: Integer Overflow.\n         } else if (virtualChannels[_vcID].partyB", "temp/tmp7845:781:14: Warning: Integer Overflow.\n             channel.erc20Balances[1]+=channel.erc20Balances[3]", "temp/tmp7845:742:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances", "temp/tmp7845:745:48: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[1] += virtualChannels[_vcID].ethBalances", "temp/tmp7845:477:18: Warning: Integer Overflow.\n                 Channels[_lcID].ethBalances[2]", "temp/tmp7845:742:50: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[1] += virtualChannels[_vcID].erc20Balances[1]", "temp/tmp7845:747:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[0] += virtualChannels[_vcID].erc20Balances[1]", "temp/tmp7845:851:10: Warning: Integer Overflow.\n         Channel memory channel = Channels[id]", "temp/tmp7845:744:48: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[0] += virtualChannels[_vcID].ethBalances[1]", "temp/tmp7845:742:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[1] += virtualChannels[_vcID].erc20Balances[1]", "temp/tmp7845:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit", "temp/tmp7845:741:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances", "temp/tmp7845:781:14: Warning: Integer Overflow.\n             channel.erc20Balances", "temp/tmp7845:264:2: Warning: Integer Overflow.\n contract LedgerChannel {\n ^\nSpanning multiple lines.", "temp/tmp7845:732:10: Warning: Integer Overflow.\n         Channels[_lcID].numOpenVC", "temp/tmp7845:651:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances[1]", "temp/tmp7845:748:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[1]", "temp/tmp7845:741:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[0] += virtualChannels[_vcID].erc20Balances[0]", "temp/tmp7845:433:68: Warning: Integer Overflow.\n         emit DidLCClose(_lcID, 0, Channels[_lcID].ethBalances[0], Channels[_lcID].erc20Balances", "temp/tmp7845:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[1]+=_balances[1]", "temp/tmp7845:739:48: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[1] += virtualChannels[_vcID].ethBalances", "temp/tmp7845:747:50: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[0] += virtualChannels[_vcID].erc20Balances", "temp/tmp7845:747:50: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[0] += virtualChannels[_vcID].erc20Balances[1]", "temp/tmp7845:650:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances", "temp/tmp7845:748:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[1] += virtualChannels[_vcID].erc20Balances[0]", "temp/tmp7845:487:18: Warning: Integer Overflow.\n                 Channels[_lcID].ethBalances[3] += msg.value", "temp/tmp7845:453:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit", "temp/tmp7845:436:10: Warning: Integer Overflow.\n         delete Channels[_lcID]", "temp/tmp7845:742:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[1]", "temp/tmp7845:456:10: Warning: Integer Overflow.\n         Channels[_lcID].isOpen", "temp/tmp7845:378:6: Warning: Integer Overflow.\n     mapping(bytes32 => Channel) public Channels", "temp/tmp7845:707:51: Warning: Integer Overflow.\n         require(virtualChannels[_vcID].partyA == ECTools.recoverSigner(_updateState, sigA)", "temp/tmp7845:649:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances", "temp/tmp7845:531:10: Warning: Integer Overflow.\n         Channels[_lcID].isOpen", "temp/tmp7845:816:33: Warning: Integer Overflow.\n         emit DidLCClose(_lcID, channel.sequence", "temp/tmp7845:745:14: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[1] += virtualChannels[_vcID].ethBalances[0]", "temp/tmp7845:741:50: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[0] += virtualChannels[_vcID].erc20Balances", "temp/tmp7845:414:42: Warning: Integer Overflow.\n         Channels[_lcID].LCopenTimeout = now + _confirmTime", "temp/tmp7845:739:14: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances", "temp/tmp7845:484:18: Warning: Integer Overflow.\n                 Channels[_lcID].erc20Balances", "temp/tmp7845:751:40: Warning: Integer Overflow.\n         emit DidVCClose(_lcID, _vcID, virtualChannels[_vcID].erc20Balances", "temp/tmp7845:881:10: Warning: Integer Overflow.\n         VirtualChannel memory virtualChannel = virtualChannels[id]", "temp/tmp7845:407:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances", "temp/tmp7845:651:52: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances[1] = _balances[3]", "temp/tmp7845:738:14: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances", "temp/tmp7845:649:50: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances[1] = _balances[1]", "temp/tmp7845:739:14: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[1] += virtualChannels[_vcID].ethBalances[1]", "temp/tmp7845:477:18: Warning: Integer Overflow.\n                 Channels[_lcID].ethBalances[2] += msg.value", "temp/tmp7845:648:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances", "temp/tmp7845:781:14: Warning: Integer Overflow.\n             channel.erc20Balances[1]", "temp/tmp7845:450:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[1]", "temp/tmp7845:645:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].partyA", "temp/tmp7845:650:52: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances[0] = _balances[2]", "temp/tmp7845:737:13: Warning: Integer Overflow.\n         if(virtualChannels[_vcID].partyA", "temp/tmp7845:745:14: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances", "temp/tmp7845:745:14: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[1]", "temp/tmp7845:739:14: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[1]", "temp/tmp7845:410:10: Warning: Integer Overflow.\n         Channels[_lcID].sequence", "temp/tmp7845:484:18: Warning: Integer Overflow.\n                 Channels[_lcID].erc20Balances[3] += _balance", "temp/tmp7845:646:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].partyB", "temp/tmp7845:781:40: Warning: Integer Overflow.\n             channel.erc20Balances[1]+=channel.erc20Balances", "temp/tmp7845:450:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances", "temp/tmp7845:780:14: Warning: Integer Overflow.\n             channel.erc20Balances", "temp/tmp7845:487:18: Warning: Integer Overflow.\n                 Channels[_lcID].ethBalances[3]", "temp/tmp7845:748:50: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[1] += virtualChannels[_vcID].erc20Balances", "temp/tmp7845:780:40: Warning: Integer Overflow.\n             channel.erc20Balances[0]+=channel.erc20Balances", "temp/tmp7845:751:81: Warning: Integer Overflow.\n         emit DidVCClose(_lcID, _vcID, virtualChannels[_vcID].erc20Balances[0], virtualChannels[_vcID].erc20Balances", "temp/tmp7845:780:14: Warning: Integer Overflow.\n             channel.erc20Balances[0]+=channel.erc20Balances[2]", "temp/tmp7845:415:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit", "temp/tmp7845:649:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances[1]", "temp/tmp7845:738:14: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[0] += virtualChannels[_vcID].ethBalances[0]", "temp/tmp7845:453:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[0]+=_balances[0]", "temp/tmp7845:411:10: Warning: Integer Overflow.\n         Channels[_lcID].confirmTime", "temp/tmp7845:417:15: Warning: Integer Overflow.\n         emit DidLCOpen(_lcID, msg.sender, _partyI, _balances[0], _token, _balances[1], Channels[_lcID].LCopenTimeout)", "temp/tmp7845:813:10: Warning: Integer Overflow.\n         channel.isOpen", "temp/tmp7845:751:81: Warning: Integer Overflow.\n         emit DidVCClose(_lcID, _vcID, virtualChannels[_vcID].erc20Balances[0], virtualChannels[_vcID].erc20Balances[1]", "temp/tmp7845:2:69: Warning: Integer Overflow.\n * @source: https://github.com/trailofbits/not-so-smart-contracts/blob/master/r", "temp/tmp7845:652:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].bond", "temp/tmp7845:738:48: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[0] += virtualChannels[_vcID].ethBalances", "temp/tmp7845:457:10: Warning: Integer Overflow.\n         numChannels++", "temp/tmp7845:744:14: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances", "temp/tmp7845:586:47: Warning: Integer Overflow.\n         require(channel.partyAddresses[1] == ECTools.recoverSigner(_state, _sigI)", "temp/tmp7845:484:18: Warning: Integer Overflow.\n                 Channels[_lcID].erc20Balances[3]", "temp/tmp7845:377:6: Warning: Integer Overflow.\n     mapping(bytes32 => VirtualChannel) public virtualChannels", "temp/tmp7845:742:50: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[1] += virtualChannels[_vcID].erc20Balances", "temp/tmp7845:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[1]", "temp/tmp7845:781:40: Warning: Integer Overflow.\n             channel.erc20Balances[1]+=channel.erc20Balances[3]", "temp/tmp7845:487:18: Warning: Integer Overflow.\n                 Channels[_lcID].ethBalances", "temp/tmp7845:739:48: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[1] += virtualChannels[_vcID].ethBalances[1]", "temp/tmp7845:744:14: Warning: Integer Overflow.\n             Channels[_lcID].ethBalances[0] += virtualChannels[_vcID].ethBalances[1]", "temp/tmp7845:477:18: Warning: Integer Overflow.\n                 Channels[_lcID].ethBalances", "temp/tmp7845:433:36: Warning: Integer Overflow.\n         emit DidLCClose(_lcID, 0, Channels[_lcID].ethBalances", "temp/tmp7845:414:10: Warning: Integer Overflow.\n         Channels[_lcID].LCopenTimeout", "temp/tmp7845:780:40: Warning: Integer Overflow.\n             channel.erc20Balances[0]+=channel.erc20Balances[2]", "temp/tmp7845:417:89: Warning: Integer Overflow.\n         emit DidLCOpen(_lcID, msg.sender, _partyI, _balances[0], _token, _balances[1], Channels[_lcID].LCopenTimeout"], "parity_multisig_bug_2": [], "integer_underflow": ["temp/tmp7845:829:27: Warning: Integer Underflow.\n                 cursor = keccak256(abi.encodePacked(proofElem, cursor))", "temp/tmp7845:629:10: Warning: Integer Underflow.\n         require(!virtualChannels[_vcID].isClose, \"VC is closed.\")", "temp/tmp7845:459:15: Warning: Integer Underflow.\n         emit DidLCJoin(_lcID, _balances[0], _balances[1])", "temp/tmp7845:569:27: Warning: Integer Underflow.\n         bytes32 _state = keccak256(\n         ^\nSpanning multiple lines.", "temp/tmp7845:401:14: Warning: Integer Underflow.\n             require(msg.value == _balances[0], \"Eth balance does not match sent value\")", "temp/tmp7845:7:57: Warning: Integer Underflow.\n // https://etherscan.io/address/0xf91546835f756da0c10cfa0cda95b15577b84aa7#code\n ^\nSpanning multiple lines.", "temp/tmp7845:627:10: Warning: Integer Underflow.\n         require(Channels[_lcID].isOpen, \"LC is closed.\")", "temp/tmp7845:827:27: Warning: Integer Underflow.\n                 cursor = keccak256(abi.encodePacked(cursor, proofElem))", "temp/tmp7845:673:10: Warning: Integer Underflow.\n         require(Channels[_lcID].isOpen, \"LC is closed.\")", "temp/tmp7845:528:55: Warning: Integer Underflow.\n         require(Channels[_lcID].partyAddresses[0] == ECTools.recoverSigner(_state, _sigA)", "temp/tmp7845:2:24: Warning: Integer Underflow.\n * @source: https://github.com/trailofbits/n", "temp/tmp7845:449:14: Warning: Integer Underflow.\n             require(Channels[_lcID].token.transferFrom(msg.sender, this, _balances[1]),\"joinChannel: token transfer failure\")", "temp/tmp7845:635:31: Warning: Integer Underflow.\n         bytes32 _initState = keccak256(\n         ^\nSpanning multiple lines.", "temp/tmp7845:732:10: Warning: Integer Underflow.\n         Channels[_lcID].numOpenVC--", "temp/tmp7845:691:33: Warning: Integer Underflow.\n         bytes32 _updateState = keccak256(\n         ^\nSpanning multiple lines.", "temp/tmp7845:640:29: Warning: Integer Underflow.\n         require(_partyA == ECTools.recoverSigner(_initState, sigA)", "temp/tmp7845:676:10: Warning: Integer Underflow.\n         require(virtualChannels[_vcID].sequence < updateSeq, \"VC sequence is higher than update sequence.\")", "temp/tmp7845:677:10: Warning: Integer Underflow.\n         require(\n         ^\nSpanning multiple lines.", "temp/tmp7845:814:10: Warning: Integer Underflow.\n         numChannels--", "temp/tmp7845:586:47: Warning: Integer Underflow.\n         require(channel.partyAddresses[1] == ECTools.recoverSigner(_state, _sigI)", "temp/tmp7845:529:55: Warning: Integer Underflow.\n         require(Channels[_lcID].partyAddresses[1] == ECTools.recoverSigner(_state, _sigI)", "temp/tmp7845:417:15: Warning: Integer Underflow.\n         emit DidLCOpen(_lcID, msg.sender, _partyI, _balances[0], _token, _balances[1], Channels[_lcID].LCopenTimeout)", "temp/tmp7845:512:27: Warning: Integer Underflow.\n         bytes32 _state = keccak256(\n         ^\nSpanning multiple lines.", "temp/tmp7845:585:47: Warning: Integer Underflow.\n         require(channel.partyAddresses[0] == ECTools.recoverSigner(_state, _sigA)", "temp/tmp7845:445:14: Warning: Integer Underflow.\n             require(msg.value == _balances[0], \"state balance does not match sent value\")", "temp/tmp7845:675:10: Warning: Integer Underflow.\n         require(!virtualChannels[_vcID].isClose, \"VC is closed.\")", "temp/tmp7845:631:10: Warning: Integer Underflow.\n         require(Channels[_lcID].updateLCtimeout < now, \"LC timeout not over.\")", "temp/tmp7845:707:51: Warning: Integer Underflow.\n         require(virtualChannels[_vcID].partyA == ECTools.recoverSigner(_updateState, sigA)", "temp/tmp7845:406:14: Warning: Integer Underflow.\n             require(Channels[_lcID].token.transferFrom(msg.sender, this, _balances[1]),\"CreateChannel: token transfer failure\")", "temp/tmp7845:681:10: Warning: Integer Underflow.\n         require(\n         ^\nSpanning multiple lines."], "money_concurrency": [["temp/tmp7845:798:14: Warning: Transaction-Ordering Dependency.\n             channel.partyAddresses[0].transfer(ethbalanceA)"], ["temp/tmp7845:798:14: Warning: Transaction-Ordering Dependency.\n             channel.partyAddresses[0].transfer(ethbalanceA)"]]}, "file_path": "dataset/reentrancy/spank_chain_payment.sol", "evm_code_coverage": 0.827681820807579, "time": 160.06847381591797}