{"vulnerabilities": {"callstack": ["temp/tmp31727:324:24: Warning: Callstack Depth Attack Vulnerability.\n        bool success = paidUser.send(amount)", "temp/tmp31727:150:9: Warning: Callstack Depth Attack Vulnerability.\n        whale.call.value(donate_amount)(bytes4(keccak256(\"donate()\")))"], "reentrancy": [], "assertion_failure": [], "time_dependency": [], "integer_overflow": ["temp/tmp31727:354:48: Warning: Integer Overflow.\n        if (bet.amount != 0 || block.number <= bet.blockNumber + BET_EXPIRATION_BLOCKS", "temp/tmp31727:270:46: Warning: Integer Overflow.\n        return (bet.amount, bet.blockNumber, bet.betMask", "temp/tmp31727:340:5: Warning: Integer Overflow.\n    function clearStorage(uint[] toCleanTicketIDs) external {\r\n    ^\nSpanning multiple lines.", "temp/tmp31727:369:16: Warning: Integer Overflow.\n        return ERC20Interface(tokenAddress).transfer(tokenOwner, tokens)", "temp/tmp31727:270:59: Warning: Integer Overflow.\n        return (bet.amount, bet.blockNumber, bet.betMask, bet.player", "temp/tmp31727:173:48: Warning: Integer Overflow.\n            uint256 random = uint256(keccak256(abi.encodePacked(blockhash(blockNumber),  ticketReveal)", "temp/tmp31727:270:29: Warning: Integer Overflow.\n        return (bet.amount, bet.blockNumber", "temp/tmp31727:354:48: Warning: Integer Overflow.\n        if (bet.amount != 0 || block.number <= bet.blockNumber", "temp/tmp31727:344:31: Warning: Integer Overflow.\n            clearProcessedBet(toCleanTicketIDs[i]", "temp/tmp31727:213:9: Warning: Integer Overflow.\n        donateAmount[msg.sender] += msg.value", "temp/tmp31727:358:9: Warning: Integer Overflow.\n        bet.blockNumber", "temp/tmp31727:169:9: Warning: Integer Overflow.\n        require (bet.amount != 0, \"Ticket is already used one!\")", "temp/tmp31727:359:9: Warning: Integer Overflow.\n        bet.betMask", "temp/tmp31727:360:9: Warning: Integer Overflow.\n        bet.player"], "parity_multisig_bug_2": [], "integer_underflow": ["temp/tmp31727:287:20: Warning: Integer Underflow.\n            return address(this).balance - lockedInBets - jackpotSize - devFeeSize", "temp/tmp31727:142:9: Warning: Integer Underflow.\n        require (secretSigner == ecrecover(signatureHash, v, r, s), \"web3 vrs signature is not valid.\")", "temp/tmp31727:287:20: Warning: Integer Underflow.\n            return address(this).balance - lockedInBets - jackpotSize", "temp/tmp31727:171:57: Warning: Integer Underflow.\n        if(blockNumber < block.number && blockNumber >= block.number - BET_EXPIRATION_BLOCKS", "temp/tmp31727:168:9: Warning: Integer Underflow.\n        require (bet.player != address(0), \"TicketID is not correct!\")", "temp/tmp31727:287:20: Warning: Integer Underflow.\n            return address(this).balance - lockedInBets"], "money_concurrency": [["temp/tmp31727:313:9: Warning: Transaction-Ordering Dependency.\n        requester.transfer(ethToTransfer)"], ["temp/tmp31727:324:24: Warning: Transaction-Ordering Dependency.\n        bool success = paidUser.send(amount)"]]}, "file_path": "dataset/unchecked_low_level_calls/0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol", "evm_code_coverage": 0.8071257961783439, "time": 8.416499137878418}