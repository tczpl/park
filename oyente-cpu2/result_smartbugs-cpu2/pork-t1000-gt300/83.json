{"vulnerabilities": {"callstack": [], "reentrancy": [], "assertion_failure": [], "time_dependency": ["temp/tmp30426:422:10: Warning: Timestamp Dependency.\n         require(now > Channels[_lcID].LCopenTimeout)"], "integer_overflow": ["temp/tmp30426:459:15: Warning: Integer Overflow.\n         emit DidLCJoin(_lcID, _balances[0], _balances[1])", "temp/tmp30426:415:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit", "temp/tmp30426:649:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances[1]", "temp/tmp30426:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[1]+=_balances[1]", "temp/tmp30426:453:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[0]+=_balances[0]", "temp/tmp30426:648:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances", "temp/tmp30426:411:10: Warning: Integer Overflow.\n         Channels[_lcID].confirmTime", "temp/tmp30426:627:10: Warning: Integer Overflow.\n         require(Channels[_lcID].isOpen, \"LC is closed.\")", "temp/tmp30426:651:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances", "temp/tmp30426:647:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].sequence", "temp/tmp30426:650:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances", "temp/tmp30426:645:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].partyA", "temp/tmp30426:650:52: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances[0] = _balances[2]", "temp/tmp30426:453:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit", "temp/tmp30426:436:10: Warning: Integer Overflow.\n         delete Channels[_lcID]", "temp/tmp30426:652:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].bond", "temp/tmp30426:456:10: Warning: Integer Overflow.\n         Channels[_lcID].isOpen", "temp/tmp30426:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit", "temp/tmp30426:531:10: Warning: Integer Overflow.\n         Channels[_lcID].isOpen", "temp/tmp30426:417:15: Warning: Integer Overflow.\n         emit DidLCOpen(_lcID, msg.sender, _partyI, _balances[0], _token, _balances[1], Channels[_lcID].LCopenTimeout)", "temp/tmp30426:433:68: Warning: Integer Overflow.\n         emit DidLCClose(_lcID, 0, Channels[_lcID].ethBalances[0], Channels[_lcID].erc20Balances", "temp/tmp30426:457:10: Warning: Integer Overflow.\n         numChannels++", "temp/tmp30426:851:10: Warning: Integer Overflow.\n         Channel memory channel = Channels[id]", "temp/tmp30426:414:42: Warning: Integer Overflow.\n         Channels[_lcID].LCopenTimeout = now + _confirmTime", "temp/tmp30426:649:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances", "temp/tmp30426:377:6: Warning: Integer Overflow.\n     mapping(bytes32 => VirtualChannel) public virtualChannels", "temp/tmp30426:410:10: Warning: Integer Overflow.\n         Channels[_lcID].sequence", "temp/tmp30426:407:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances", "temp/tmp30426:646:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].partyB", "temp/tmp30426:450:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances", "temp/tmp30426:264:2: Warning: Integer Overflow.\n contract LedgerChannel {\n ^\nSpanning multiple lines.", "temp/tmp30426:651:52: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances[1] = _balances[3]", "temp/tmp30426:433:36: Warning: Integer Overflow.\n         emit DidLCClose(_lcID, 0, Channels[_lcID].ethBalances", "temp/tmp30426:651:10: Warning: Integer Overflow.\n         virtualChannels[_vcID].erc20Balances[1]", "temp/tmp30426:450:14: Warning: Integer Overflow.\n             Channels[_lcID].erc20Balances[1]", "temp/tmp30426:649:50: Warning: Integer Overflow.\n         virtualChannels[_vcID].ethBalances[1] = _balances[1]", "temp/tmp30426:454:10: Warning: Integer Overflow.\n         Channels[_lcID].initialDeposit[1]", "temp/tmp30426:414:10: Warning: Integer Overflow.\n         Channels[_lcID].LCopenTimeout", "temp/tmp30426:417:89: Warning: Integer Overflow.\n         emit DidLCOpen(_lcID, msg.sender, _partyI, _balances[0], _token, _balances[1], Channels[_lcID].LCopenTimeout"], "parity_multisig_bug_2": [], "integer_underflow": ["temp/tmp30426:529:55: Warning: Integer Underflow.\n         require(Channels[_lcID].partyAddresses[1] == ECTools.recoverSigner(_state, _sigI)", "temp/tmp30426:7:57: Warning: Integer Underflow.\n // https://etherscan.io/address/0xf91546835f756da0c10cfa0cda95b15577b84aa7#code\n ^\nSpanning multiple lines.", "temp/tmp30426:417:15: Warning: Integer Underflow.\n         emit DidLCOpen(_lcID, msg.sender, _partyI, _balances[0], _token, _balances[1], Channels[_lcID].LCopenTimeout)", "temp/tmp30426:512:27: Warning: Integer Underflow.\n         bytes32 _state = keccak256(\n         ^\nSpanning multiple lines.", "temp/tmp30426:629:10: Warning: Integer Underflow.\n         require(!virtualChannels[_vcID].isClose, \"VC is closed.\")", "temp/tmp30426:445:14: Warning: Integer Underflow.\n             require(msg.value == _balances[0], \"state balance does not match sent value\")", "temp/tmp30426:829:27: Warning: Integer Underflow.\n                 cursor = keccak256(abi.encodePacked(proofElem, cursor))", "temp/tmp30426:459:15: Warning: Integer Underflow.\n         emit DidLCJoin(_lcID, _balances[0], _balances[1])", "temp/tmp30426:640:29: Warning: Integer Underflow.\n         require(_partyA == ECTools.recoverSigner(_initState, sigA)", "temp/tmp30426:528:55: Warning: Integer Underflow.\n         require(Channels[_lcID].partyAddresses[0] == ECTools.recoverSigner(_state, _sigA)", "temp/tmp30426:401:14: Warning: Integer Underflow.\n             require(msg.value == _balances[0], \"Eth balance does not match sent value\")", "temp/tmp30426:631:10: Warning: Integer Underflow.\n         require(Channels[_lcID].updateLCtimeout < now, \"LC timeout not over.\")", "temp/tmp30426:406:14: Warning: Integer Underflow.\n             require(Channels[_lcID].token.transferFrom(msg.sender, this, _balances[1]),\"CreateChannel: token transfer failure\")", "temp/tmp30426:2:24: Warning: Integer Underflow.\n * @source: https://github.com/trailofbits/n", "temp/tmp30426:449:14: Warning: Integer Underflow.\n             require(Channels[_lcID].token.transferFrom(msg.sender, this, _balances[1]),\"joinChannel: token transfer failure\")", "temp/tmp30426:635:31: Warning: Integer Underflow.\n         bytes32 _initState = keccak256(\n         ^\nSpanning multiple lines.", "temp/tmp30426:827:27: Warning: Integer Underflow.\n                 cursor = keccak256(abi.encodePacked(cursor, proofElem))"], "money_concurrency": [["temp/tmp30426:534:14: Warning: Transaction-Ordering Dependency.\n             Channels[_lcID].partyAddresses[0].transfer(_balances[0])"], ["temp/tmp30426:426:14: Warning: Transaction-Ordering Dependency.\n             Channels[_lcID].partyAddresses[0].transfer(Channels[_lcID].ethBalances[0])"]]}, "file_path": "dataset/reentrancy/spank_chain_payment.sol", "evm_code_coverage": 0.42961122985385014, "time": 301.7530908584595}